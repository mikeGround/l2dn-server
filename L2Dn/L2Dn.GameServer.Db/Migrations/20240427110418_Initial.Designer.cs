// <auto-generated />
using System;
using L2Dn.GameServer.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace L2Dn.GameServer.Db.Migrations
{
    [DbContext(typeof(GameServerDbContext))]
    [Migration("20240427110418_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("L2Dn.GameServer.Db.AccountCollection", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<short>("CollectionId")
                        .HasColumnType("smallint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.HasKey("AccountId", "CollectionId", "Index");

                    b.ToTable("AccountCollections");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.AccountCollectionFavorite", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<short>("CollectionId")
                        .HasColumnType("smallint");

                    b.HasKey("AccountId", "CollectionId");

                    b.ToTable("AccountCollectionFavorites");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.AccountPremium", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountId"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("AccountId");

                    b.ToTable("AccountPremiums");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.AccountRef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LastIpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("AccountRefs");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.AccountVariable", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AccountId", "Name");

                    b.ToTable("AccountVariables");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Ally", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CrestId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("Id");

                    b.HasIndex("CrestId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Allys");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("InitialDelay")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("Period")
                        .HasColumnType("interval");

                    b.Property<int>("Repeat")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.BotReport", b =>
                {
                    b.Property<int>("BotId")
                        .HasColumnType("integer");

                    b.Property<int>("ReporterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReportTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BotId", "ReporterId");

                    b.ToTable("BotReports");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.BufferScheme", b =>
                {
                    b.Property<int>("ObjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("ObjectId", "Name");

                    b.ToTable("BufferSchemes");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CastleManorProcure", b =>
                {
                    b.Property<short>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<int>("CropId")
                        .HasColumnType("integer");

                    b.Property<bool>("NextPeriod")
                        .HasColumnType("boolean");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("RewardType")
                        .HasColumnType("integer");

                    b.Property<long>("StartAmount")
                        .HasColumnType("bigint");

                    b.HasKey("CastleId", "CropId", "NextPeriod");

                    b.ToTable("CastleManorProcure");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CastleManorProduction", b =>
                {
                    b.Property<short>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<int>("SeedId")
                        .HasColumnType("integer");

                    b.Property<bool>("NextPeriod")
                        .HasColumnType("boolean");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<long>("StartAmount")
                        .HasColumnType("bigint");

                    b.HasKey("CastleId", "SeedId", "NextPeriod");

                    b.ToTable("CastleManorProduction");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CastleSiegeGuard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<bool>("IsHired")
                        .HasColumnType("boolean");

                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("RespawnDelay")
                        .HasColumnType("interval");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CastleSiegeGuards");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CastleTrapUpgrade", b =>
                {
                    b.Property<short>("TowerIndex")
                        .HasColumnType("smallint");

                    b.Property<short>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.HasKey("TowerIndex", "CastleId");

                    b.ToTable("CastleTrapUpgrades");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("integer");

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<int>("Apprentice")
                        .HasColumnType("integer");

                    b.Property<short>("BaseClass")
                        .HasColumnType("smallint");

                    b.Property<short>("BirthDay")
                        .HasColumnType("smallint");

                    b.Property<int>("BookmarkSlot")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ClanCreateExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ClanId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ClanJoinExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ClanPrivileges")
                        .HasColumnType("integer");

                    b.Property<short>("Class")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentCp")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentHp")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentMp")
                        .HasColumnType("integer");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpBeforeDeath")
                        .HasColumnType("bigint");

                    b.Property<byte>("Face")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Faction")
                        .HasColumnType("smallint");

                    b.Property<int>("Fame")
                        .HasColumnType("integer");

                    b.Property<byte>("HairColor")
                        .HasColumnType("smallint");

                    b.Property<byte>("HairStyle")
                        .HasColumnType("smallint");

                    b.Property<bool>("HasDwarvenCraft")
                        .HasColumnType("boolean");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<bool>("IsNobless")
                        .HasColumnType("boolean");

                    b.Property<int>("Kills")
                        .HasColumnType("integer");

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<DateTime?>("LastAccess")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<byte>("LevelJoinedAcademy")
                        .HasColumnType("smallint");

                    b.Property<int>("MaxCp")
                        .HasColumnType("integer");

                    b.Property<int>("MaxHp")
                        .HasColumnType("integer");

                    b.Property<int>("MaxMp")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<int>("NameColor")
                        .HasColumnType("integer");

                    b.Property<byte>("OnlineStatus")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("OnlineTime")
                        .HasColumnType("interval");

                    b.Property<int>("PcCafePoints")
                        .HasColumnType("integer");

                    b.Property<int>("PkKills")
                        .HasColumnType("integer");

                    b.Property<int>("PowerGrade")
                        .HasColumnType("integer");

                    b.Property<int>("PvpKills")
                        .HasColumnType("integer");

                    b.Property<int>("RaidBossPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Reputation")
                        .HasColumnType("integer");

                    b.Property<byte>("Sex")
                        .HasColumnType("smallint");

                    b.Property<byte>("SlotIndex")
                        .HasColumnType("smallint");

                    b.Property<long>("Sp")
                        .HasColumnType("bigint");

                    b.Property<int?>("SponsorId")
                        .HasColumnType("integer");

                    b.Property<int>("SubPledge")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<int>("TitleColor")
                        .HasColumnType("integer");

                    b.Property<int?>("TransformId")
                        .HasColumnType("integer");

                    b.Property<int>("VitalityPoints")
                        .HasColumnType("integer");

                    b.Property<bool>("WantsPeace")
                        .HasColumnType("boolean");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClanId");

                    b.HasIndex("Created");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SponsorId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterDailyReward", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("RewardId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastCompleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Progress")
                        .HasColumnType("integer");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("CharacterId", "RewardId");

                    b.ToTable("CharacterDailyRewards");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterFriend", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("FriendId")
                        .HasColumnType("integer");

                    b.Property<string>("Memo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Relation")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("CharacterFriends");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterHenna", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<byte>("ClassIndex")
                        .HasColumnType("smallint");

                    b.Property<int>("Slot")
                        .HasColumnType("integer");

                    b.Property<int>("SymbolId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "ClassIndex", "Slot");

                    b.ToTable("CharacterHennas");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterHennaPoten", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("SlotPosition")
                        .HasColumnType("integer");

                    b.Property<int>("EnchantExp")
                        .HasColumnType("integer");

                    b.Property<int>("EnchantLevel")
                        .HasColumnType("integer");

                    b.Property<int>("PotenId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "SlotPosition");

                    b.ToTable("CharacterHennaPotens");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterInstance", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("InstanceId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CharacterId", "InstanceId");

                    b.ToTable("CharacterInstances");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterItemReuse", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemObjectId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ReuseDelay")
                        .HasColumnType("interval");

                    b.Property<DateTime>("SysTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CharacterId", "ItemId", "ItemObjectId");

                    b.ToTable("CharacterItemReuses");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterMentee", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("MentorId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "MentorId");

                    b.ToTable("CharacterMentees");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterOfflineTrade", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("CharacterId");

                    b.ToTable("CharacterOfflineTrades");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterOfflineTradeItem", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.HasKey("CharacterId", "ItemId");

                    b.ToTable("CharacterOfflineTradeItems");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterPremiumItem", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemNumber")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<long>("ItemCount")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemSender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("CharacterId", "ItemNumber", "ItemId");

                    b.ToTable("CharacterPremiumItems");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterPurge", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<short>("Category")
                        .HasColumnType("smallint");

                    b.Property<int>("Keys")
                        .HasColumnType("integer");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<int>("RemainingKeys")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "Category");

                    b.ToTable("CharacterPurges");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterQuest", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Variable")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("CharacterId", "Name", "Variable");

                    b.ToTable("CharacterQuests");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterRandomCraft", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CharacterId"));

                    b.Property<int>("FullPoints")
                        .HasColumnType("integer");

                    b.Property<bool>("IsSayhaRoll")
                        .HasColumnType("boolean");

                    b.Property<long>("Item1Count")
                        .HasColumnType("bigint");

                    b.Property<int>("Item1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Item1LockLeft")
                        .HasColumnType("integer");

                    b.Property<bool>("Item1Locked")
                        .HasColumnType("boolean");

                    b.Property<long>("Item2Count")
                        .HasColumnType("bigint");

                    b.Property<int>("Item2Id")
                        .HasColumnType("integer");

                    b.Property<int>("Item2LockLeft")
                        .HasColumnType("integer");

                    b.Property<bool>("Item2Locked")
                        .HasColumnType("boolean");

                    b.Property<long>("Item3Count")
                        .HasColumnType("bigint");

                    b.Property<int>("Item3Id")
                        .HasColumnType("integer");

                    b.Property<int>("Item3LockLeft")
                        .HasColumnType("integer");

                    b.Property<bool>("Item3Locked")
                        .HasColumnType("boolean");

                    b.Property<long>("Item4Count")
                        .HasColumnType("bigint");

                    b.Property<int>("Item4Id")
                        .HasColumnType("integer");

                    b.Property<int>("Item4LockLeft")
                        .HasColumnType("integer");

                    b.Property<bool>("Item4Locked")
                        .HasColumnType("boolean");

                    b.Property<long>("Item5Count")
                        .HasColumnType("bigint");

                    b.Property<int>("Item5Id")
                        .HasColumnType("integer");

                    b.Property<int>("Item5LockLeft")
                        .HasColumnType("integer");

                    b.Property<bool>("Item5Locked")
                        .HasColumnType("boolean");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId");

                    b.ToTable("CharacterRandomCrafts");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterRecipeBook", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<short>("ClassIndex")
                        .HasColumnType("smallint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id", "CharacterId", "ClassIndex");

                    b.ToTable("CharacterRecipeBooks");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterRecipeShopList", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.HasKey("CharacterId", "RecipeId");

                    b.ToTable("CharacterRecipeShopLists");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterRecoBonus", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CharacterId"));

                    b.Property<short>("RecHave")
                        .HasColumnType("smallint");

                    b.Property<short>("RecLeft")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("TimeLeft")
                        .HasColumnType("interval");

                    b.HasKey("CharacterId");

                    b.ToTable("CharacterRecoBonuses");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterRevenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("KillTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("KillerClan")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<short>("KillerClass")
                        .HasColumnType("smallint");

                    b.Property<int>("KillerLevel")
                        .HasColumnType("integer");

                    b.Property<string>("KillerName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<DateTime>("ShareTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Shared")
                        .HasColumnType("boolean");

                    b.Property<int>("SharedTeleportRemaining")
                        .HasColumnType("integer");

                    b.Property<int>("ShowLocationRemaining")
                        .HasColumnType("integer");

                    b.Property<int>("TeleportRemaining")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("VictimClan")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<short>("VictimClass")
                        .HasColumnType("smallint");

                    b.Property<int>("VictimLevel")
                        .HasColumnType("integer");

                    b.Property<string>("VictimName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.HasKey("Id");

                    b.ToTable("CharacterRevenges");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterShortCut", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<byte>("ClassIndex")
                        .HasColumnType("smallint");

                    b.Property<byte>("Slot")
                        .HasColumnType("smallint");

                    b.Property<byte>("Page")
                        .HasColumnType("smallint");

                    b.Property<int>("ShortCutId")
                        .HasColumnType("integer");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint");

                    b.Property<short>("SkillSubLevel")
                        .HasColumnType("smallint");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("CharacterId", "ClassIndex", "Slot", "Page");

                    b.HasIndex("ShortCutId");

                    b.ToTable("CharacterShortCuts");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<byte>("ClassIndex")
                        .HasColumnType("smallint");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint");

                    b.Property<short>("SkillSubLevel")
                        .HasColumnType("smallint");

                    b.HasKey("CharacterId", "ClassIndex", "SkillId");

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterSkillReuse", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<byte>("ClassIndex")
                        .HasColumnType("smallint");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint");

                    b.Property<byte>("BuffIndex")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan?>("RemainingTime")
                        .HasColumnType("interval");

                    b.Property<byte>("RestoreType")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("ReuseDelay")
                        .HasColumnType("interval");

                    b.Property<short>("SkillSubLevel")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("SysTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CharacterId", "ClassIndex", "SkillId", "SkillLevel");

                    b.ToTable("CharacterSkillReuses");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterSpirit", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("AttackPoints")
                        .HasColumnType("smallint");

                    b.Property<byte>("CriticalDamagePoints")
                        .HasColumnType("smallint");

                    b.Property<byte>("CriticalRatePoints")
                        .HasColumnType("smallint");

                    b.Property<byte>("DefensePoints")
                        .HasColumnType("smallint");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsInUse")
                        .HasColumnType("boolean");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint");

                    b.Property<byte>("Stage")
                        .HasColumnType("smallint");

                    b.HasKey("CharacterId", "Type");

                    b.ToTable("CharacterSpirits");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterSubClass", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<short>("SubClass")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassIndex")
                        .HasColumnType("smallint");

                    b.Property<bool>("DualClass")
                        .HasColumnType("boolean");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<long>("Sp")
                        .HasColumnType("bigint");

                    b.Property<int>("VitalityPoints")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "SubClass");

                    b.ToTable("CharacterSubClasses");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterSummon", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("SummonId")
                        .HasColumnType("integer");

                    b.Property<int>("SummonSkillId")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentHp")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentMp")
                        .HasColumnType("integer");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("interval");

                    b.HasKey("OwnerId", "SummonId", "SummonSkillId");

                    b.ToTable("CharacterSummons");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterSurveillance", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "TargetId");

                    b.ToTable("CharacterSurveillances");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterTeleportBookmark", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Icon")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "Id");

                    b.ToTable("CharacterTeleportBookmarks");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterVariable", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CharacterId", "Name");

                    b.ToTable("CharacterVariables");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Clan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AllyCrestId")
                        .HasColumnType("integer");

                    b.Property<int?>("AllyId")
                        .HasColumnType("integer");

                    b.Property<string>("AllyName")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<DateTime?>("AllyPenaltyExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("AllyPenaltyExpireType")
                        .HasColumnType("smallint");

                    b.Property<int>("AuctionBidAt")
                        .HasColumnType("integer");

                    b.Property<short>("BloodAllianceCount")
                        .HasColumnType("smallint");

                    b.Property<short>("BloodOathCount")
                        .HasColumnType("smallint");

                    b.Property<short?>("Castle")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CharPenaltyExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CrestId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DissolvingExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Exp")
                        .HasColumnType("integer");

                    b.Property<int?>("LargeCrestId")
                        .HasColumnType("integer");

                    b.Property<int>("LeaderId")
                        .HasColumnType("integer");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<int?>("NewLeaderId")
                        .HasColumnType("integer");

                    b.Property<int>("Reputation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AllyId");

                    b.HasIndex("CrestId");

                    b.HasIndex("LargeCrestId");

                    b.HasIndex("LeaderId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanNotice", b =>
                {
                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Notice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClanId");

                    b.ToTable("ClanNotices");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanPrivileges", b =>
                {
                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<int>("Party")
                        .HasColumnType("integer");

                    b.Property<int>("Privileges")
                        .HasColumnType("integer");

                    b.HasKey("ClanId", "Rank", "Party");

                    b.ToTable("ClanPrivileges");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanSkill", b =>
                {
                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<int>("SubPledgeId")
                        .HasColumnType("integer");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.HasKey("ClanId", "SkillId", "SubPledgeId");

                    b.ToTable("ClanSkills");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanSubPledge", b =>
                {
                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<int>("SubPledgeId")
                        .HasColumnType("integer");

                    b.Property<int>("LeaderId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("ClanId", "SubPledgeId");

                    b.HasIndex("LeaderId")
                        .IsUnique();

                    b.ToTable("ClanSubPledges");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanWar", b =>
                {
                    b.Property<int>("Clan1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Clan2Id")
                        .HasColumnType("integer");

                    b.Property<int>("Clan1Kills")
                        .HasColumnType("integer");

                    b.Property<int>("Clan2Kills")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("State")
                        .HasColumnType("smallint");

                    b.Property<int?>("WinnerClanId")
                        .HasColumnType("integer");

                    b.HasKey("Clan1Id", "Clan2Id");

                    b.HasIndex("Clan2Id");

                    b.HasIndex("WinnerClanId");

                    b.ToTable("ClanWars");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Crest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasMaxLength(2176)
                        .HasColumnType("bytea");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Crests");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbAchievementBox", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CharacterId"));

                    b.Property<int>("BoxOwned")
                        .HasColumnType("integer");

                    b.Property<int>("BoxStateSlot1")
                        .HasColumnType("integer");

                    b.Property<int>("BoxStateSlot2")
                        .HasColumnType("integer");

                    b.Property<int>("BoxStateSlot3")
                        .HasColumnType("integer");

                    b.Property<int>("BoxStateSlot4")
                        .HasColumnType("integer");

                    b.Property<int>("BoxTypeSlot1")
                        .HasColumnType("integer");

                    b.Property<int>("BoxTypeSlot2")
                        .HasColumnType("integer");

                    b.Property<int>("BoxTypeSlot3")
                        .HasColumnType("integer");

                    b.Property<int>("BoxTypeSlot4")
                        .HasColumnType("integer");

                    b.Property<int>("MonsterPoint")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OpenTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PendingBox")
                        .HasColumnType("integer");

                    b.Property<int>("PvpPoint")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId");

                    b.ToTable("AchievementBoxes");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbAirShip", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OwnerId"));

                    b.Property<int>("Fuel")
                        .HasColumnType("integer");

                    b.HasKey("OwnerId");

                    b.ToTable("AirShips");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbBbsFavorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ByPass")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("BbsFavorites");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbBuyList", b =>
                {
                    b.Property<int>("BuyListId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("NextRestockTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BuyListId", "ItemId");

                    b.ToTable("BuyLists");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCastle", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegistrationEndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("RegistrationTimeOver")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowNpcCrest")
                        .HasColumnType("boolean");

                    b.Property<int>("Side")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SiegeTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("TicketBuyCount")
                        .HasColumnType("smallint");

                    b.Property<long>("Treasury")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Castles");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCastleDoorUpgrade", b =>
                {
                    b.Property<int>("DoorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DoorId"));

                    b.Property<byte>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<short>("Ratio")
                        .HasColumnType("smallint");

                    b.HasKey("DoorId");

                    b.ToTable("CastleDoorUpgrades");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCastleFunction", b =>
                {
                    b.Property<byte>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Lease")
                        .HasColumnType("integer");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("Rate")
                        .HasColumnType("interval");

                    b.HasKey("CastleId", "Type");

                    b.ToTable("CastleFunctions");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCastleSiegeClan", b =>
                {
                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<byte>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCastleOwner")
                        .HasColumnType("boolean");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("ClanId", "CastleId");

                    b.ToTable("CastleSiegeClans");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCharacterContact", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("ContactId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "ContactId");

                    b.ToTable("CharacterContacts");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCharacterCouple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AffianceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Character1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Character2Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Married")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("WeddingDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("CharacterCouples");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCharacterMacros", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Commands")
                        .IsRequired()
                        .HasMaxLength(1255)
                        .HasColumnType("character varying(1255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int?>("Icon")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("CharacterId", "Id");

                    b.ToTable("CharacterMacros");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCharacterRankingHistory", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.Property<int>("Ranking")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "Date");

                    b.ToTable("CharacterRankingHistory");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbClanHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PaidUntil")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("ClanHalls");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbClanHallBidder", b =>
                {
                    b.Property<int>("ClanHallId")
                        .HasColumnType("integer");

                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<long>("Bid")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BidTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ClanHallId", "ClanId");

                    b.ToTable("ClanHallBidders");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbClanVariable", b =>
                {
                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClanId", "Name");

                    b.ToTable("ClanVariables");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCommissionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("DiscountInPercentage")
                        .HasColumnType("smallint");

                    b.Property<short>("DurationInDays")
                        .HasColumnType("smallint");

                    b.Property<int>("ItemObjectId")
                        .HasColumnType("integer");

                    b.Property<long>("PricePerUnit")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("CommissionItems");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCursedWeapon", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NbKills")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerPkKills")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerReputation")
                        .HasColumnType("integer");

                    b.HasKey("ItemId");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("CursedWeapons");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbCustomMail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("CustomMails");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbEnchantChallengePoint", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "GroupId");

                    b.ToTable("EnchantChallengePoints");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbEnchantChallengePointRecharge", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("OptionIndex")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "GroupId", "OptionIndex");

                    b.ToTable("EnchantChallengePointRecharges");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbFort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CastleId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastOwnedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SiegeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<int>("SupplyLevel")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Forts");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbFortDoorUpgrade", b =>
                {
                    b.Property<int>("DoorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DoorId"));

                    b.Property<byte>("FortId")
                        .HasColumnType("smallint");

                    b.Property<int>("Hp")
                        .HasColumnType("integer");

                    b.Property<int>("MDef")
                        .HasColumnType("integer");

                    b.Property<int>("PDef")
                        .HasColumnType("integer");

                    b.HasKey("DoorId");

                    b.ToTable("FortDoorUpgrades");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbFortFunction", b =>
                {
                    b.Property<byte>("FortId")
                        .HasColumnType("smallint");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Lease")
                        .HasColumnType("integer");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("Rate")
                        .HasColumnType("interval");

                    b.HasKey("FortId", "Type");

                    b.ToTable("FortFunctions");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbFortSiegeGuard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("FortId")
                        .HasColumnType("smallint");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<bool>("IsHired")
                        .HasColumnType("boolean");

                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("RespawnDelay")
                        .HasColumnType("interval");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FortId");

                    b.ToTable("FortSiegeGuards");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbFortSpawn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<byte>("FortId")
                        .HasColumnType("smallint");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FortId");

                    b.ToTable("FortSpawns");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbGlobalTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("LastRun")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TaskParam1")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TaskParam2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TaskParam3")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("TaskType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GlobalTasks");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbGrandBoss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("CurrentHp")
                        .HasColumnType("double precision");

                    b.Property<double>("CurrentMp")
                        .HasColumnType("double precision");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RespawnTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GrandBosses");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbHero", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CharacterId"));

                    b.Property<bool>("Claimed")
                        .HasColumnType("boolean");

                    b.Property<short>("ClassId")
                        .HasColumnType("smallint");

                    b.Property<short>("Count")
                        .HasColumnType("smallint");

                    b.Property<short>("LegendCount")
                        .HasColumnType("smallint");

                    b.Property<string>("Message")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<bool>("Played")
                        .HasColumnType("boolean");

                    b.HasKey("CharacterId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbHeroDiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("Action")
                        .HasColumnType("smallint");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("Param")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("HeroesDiary");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbItem", b =>
                {
                    b.Property<int>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ObjectId"));

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<int>("CustomType1")
                        .HasColumnType("integer");

                    b.Property<int>("CustomType2")
                        .HasColumnType("integer");

                    b.Property<int>("EnchantLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Location")
                        .HasColumnType("integer");

                    b.Property<int>("LocationData")
                        .HasColumnType("integer");

                    b.Property<int?>("ManaLeft")
                        .HasColumnType("integer");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TimeOfUse")
                        .HasColumnType("integer");

                    b.HasKey("ObjectId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OwnerId", "Location");

                    b.HasIndex("OwnerId", "ItemId", "Location");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbItemElemental", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("ItemId", "Type");

                    b.ToTable("ItemElementals");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbItemSpecialAbility", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("OptionId")
                        .HasColumnType("integer");

                    b.Property<byte>("Position")
                        .HasColumnType("smallint");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("ItemId", "OptionId");

                    b.ToTable("ItemSpecialAbilities");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbItemVariable", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ItemId", "Name");

                    b.ToTable("ItemVariables");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbItemVariation", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<int>("MineralId")
                        .HasColumnType("integer");

                    b.Property<int>("Option1")
                        .HasColumnType("integer");

                    b.Property<int>("Option2")
                        .HasColumnType("integer");

                    b.HasKey("ItemId");

                    b.ToTable("ItemVariations");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbMailMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Elementals")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<short>("EnchantLevel")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("HasAttachments")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeletedByReceiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeletedBySender")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUnread")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("integer");

                    b.Property<long>("RequiredAdena")
                        .HasColumnType("bigint");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.Property<byte>("SentBySystem")
                        .HasColumnType("smallint");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MessageId");

                    b.ToTable("MailMessages");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbMerchantLease", b =>
                {
                    b.Property<int>("MerchantId")
                        .HasColumnType("integer");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Bid")
                        .HasColumnType("integer");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.HasKey("MerchantId", "CharacterId", "Type");

                    b.ToTable("MerchantLeases");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbNpcVariable", b =>
                {
                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NpcId", "Name");

                    b.ToTable("NpcVariables");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbOlympiadData", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<short>("CurrentCycle")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("NextWeeklyChange")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OlympiadEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("Period")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ValidationEnd")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("OlympiadData");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbOlympiadFight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("Character1Class")
                        .HasColumnType("smallint");

                    b.Property<int>("Character1Id")
                        .HasColumnType("integer");

                    b.Property<short>("Character2Class")
                        .HasColumnType("smallint");

                    b.Property<int>("Character2Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Classed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("interval");

                    b.Property<byte>("Winner")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Character1Id");

                    b.HasIndex("Character2Id");

                    b.ToTable("OlympiadFights");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbPartyMatchingHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Leader")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Title")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.ToTable("PartyMatchingHistory");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbPetSkill", b =>
                {
                    b.Property<int>("PetItemObjectId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint");

                    b.HasKey("PetItemObjectId", "SkillId", "SkillLevel");

                    b.ToTable("PetSkills");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbPetSkillReuse", b =>
                {
                    b.Property<int>("PetItemObjectId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint");

                    b.Property<byte>("BuffIndex")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("RemainingTime")
                        .HasColumnType("interval");

                    b.Property<short>("SkillSubLevel")
                        .HasColumnType("smallint");

                    b.HasKey("PetItemObjectId", "SkillId", "SkillLevel");

                    b.ToTable("PetSkillReuses");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbPetitionFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("GmName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("Message")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)");

                    b.Property<byte>("Rate")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PetitionFeedbacks");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbPunishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Affect")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PunishedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Punishments");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbResidenceFunction", b =>
                {
                    b.Property<int>("ResidenceId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("ResidenceId", "Id");

                    b.ToTable("ResidenceFunctions");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.DbSummonSkillReuse", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<byte>("OwnerClassIndex")
                        .HasColumnType("smallint");

                    b.Property<int>("SummonSkillId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint");

                    b.Property<byte>("BuffIndex")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("RemainingTime")
                        .HasColumnType("interval");

                    b.Property<short>("SkillSubLevel")
                        .HasColumnType("smallint");

                    b.HasKey("OwnerId", "OwnerClassIndex", "SummonSkillId", "SkillId", "SkillLevel");

                    b.ToTable("SummonSkillReuses");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.FortSiegeClan", b =>
                {
                    b.Property<short>("FortId")
                        .HasColumnType("smallint");

                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.HasKey("FortId", "ClanId");

                    b.ToTable("FortSiegeClans");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Forum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int?>("Perm")
                        .HasColumnType("integer");

                    b.Property<int?>("Post")
                        .HasColumnType("integer");

                    b.Property<int?>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Forums");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.GlobalVariable", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("GlobalVariables");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.HuntPass", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountId"));

                    b.Property<int>("CurrentStep")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("boolean");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<int>("PremiumRewardStep")
                        .HasColumnType("integer");

                    b.Property<int>("RewardStep")
                        .HasColumnType("integer");

                    b.Property<int>("SayhaPointsAvailable")
                        .HasColumnType("integer");

                    b.Property<int>("SayhaPointsUsed")
                        .HasColumnType("integer");

                    b.Property<bool>("UnclaimedReward")
                        .HasColumnType("boolean");

                    b.HasKey("AccountId");

                    b.ToTable("HuntPasses");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ItemAuction", b =>
                {
                    b.Property<int>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AuctionId"));

                    b.Property<int>("AuctionItemId")
                        .HasColumnType("integer");

                    b.Property<byte>("AuctionStateId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("EndingTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InstanceId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartingTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("AuctionId");

                    b.ToTable("ItemAuctions");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ItemAuctionBid", b =>
                {
                    b.Property<int>("AuctionId")
                        .HasColumnType("integer");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<long>("Bid")
                        .HasColumnType("bigint");

                    b.HasKey("AuctionId", "CharacterId");

                    b.ToTable("ItemAuctionBids");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ItemOnGround", b =>
                {
                    b.Property<int>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ObjectId"));

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DropTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EnchantLevel")
                        .HasColumnType("integer");

                    b.Property<bool>("Equipable")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("ObjectId");

                    b.ToTable("ItemsOnGround");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ItemTransactionHistory", b =>
                {
                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<int>("EnchantLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.HasKey("CreatedTime");

                    b.ToTable("ItemTransactionHistory");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.MonsterDerbyBet", b =>
                {
                    b.Property<byte>("LaneId")
                        .HasColumnType("smallint");

                    b.Property<long>("Bet")
                        .HasColumnType("bigint");

                    b.HasKey("LaneId");

                    b.ToTable("DerbyBets");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.MonsterDerbyHistory", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RaceId"));

                    b.Property<int>("First")
                        .HasColumnType("integer");

                    b.Property<double>("OddRate")
                        .HasColumnType("double precision");

                    b.Property<int>("Second")
                        .HasColumnType("integer");

                    b.HasKey("RaceId");

                    b.ToTable("DerbyHistory");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.NpcRespawn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("CurrentHp")
                        .HasColumnType("double precision");

                    b.Property<double>("CurrentMp")
                        .HasColumnType("double precision");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("RespawnTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("NpcRespawns");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.OlympiadNoble", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CharacterId"));

                    b.Property<short>("Class")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsDone")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsDoneWeek")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsDrawn")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsLost")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsWon")
                        .HasColumnType("smallint");

                    b.Property<int>("OlympiadPoints")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId");

                    b.ToTable("OlympiadNobles");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.OlympiadNobleEom", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CharacterId"));

                    b.Property<short>("Class")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsDone")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsDrawn")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsLost")
                        .HasColumnType("smallint");

                    b.Property<short>("CompetitionsWon")
                        .HasColumnType("smallint");

                    b.Property<int>("OlympiadPoints")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId");

                    b.ToTable("OlympiadNoblesEom");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Pet", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentHp")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentMp")
                        .HasColumnType("integer");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.Property<int>("Fed")
                        .HasColumnType("integer");

                    b.Property<int>("ItemObjectId")
                        .HasColumnType("integer");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<bool>("Restore")
                        .HasColumnType("boolean");

                    b.Property<long>("Sp")
                        .HasColumnType("bigint");

                    b.HasKey("OwnerId");

                    b.HasIndex("ItemObjectId")
                        .IsUnique();

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.PetEvolve", b =>
                {
                    b.Property<int>("ItemObjectId")
                        .HasColumnType("integer");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("ItemObjectId", "Index", "Level");

                    b.ToTable("PetEvolves");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.PledgeApplicant", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<int>("Karma")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("CharacterId", "ClanId");

                    b.ToTable("PledgeApplicants");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.PledgeRecruit", b =>
                {
                    b.Property<int>("ClanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClanId"));

                    b.Property<int>("ApplicationType")
                        .HasColumnType("integer");

                    b.Property<string>("DetailedInformation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Karma")
                        .HasColumnType("integer");

                    b.Property<int>("RecruitType")
                        .HasColumnType("integer");

                    b.HasKey("ClanId");

                    b.ToTable("PledgeRecruits");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.PledgeWaitingList", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CharacterId"));

                    b.Property<int>("Karma")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId");

                    b.ToTable("PledgeWaitingLists");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ForumId")
                        .HasColumnType("integer");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TopicId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ForumId");

                    b.HasIndex("TopicId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.SiegeClan", b =>
                {
                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<byte>("CastleId")
                        .HasColumnType("smallint");

                    b.Property<bool>("CastleOwmer")
                        .HasColumnType("boolean");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("ClanId", "CastleId");

                    b.ToTable("SiegeClans");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ForumId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("Reply")
                        .HasColumnType("integer");

                    b.Property<int?>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ForumId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.WorldExchangeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ItemObjectId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemStatus")
                        .HasColumnType("integer");

                    b.Property<int>("OldOwnerId")
                        .HasColumnType("integer");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("WorldExchangeItems");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Ally", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Crest", "Crest")
                        .WithMany()
                        .HasForeignKey("CrestId");

                    b.Navigation("Crest");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Character", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.AccountRef", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("L2Dn.GameServer.Db.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId");

                    b.HasOne("L2Dn.GameServer.Db.Character", "Sponsor")
                        .WithMany()
                        .HasForeignKey("SponsorId");

                    b.Navigation("Account");

                    b.Navigation("Clan");

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterFriend", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("L2Dn.GameServer.Db.Character", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Friend");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterOfflineTrade", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterOfflineTradeItem", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.CharacterSummon", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Character", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Clan", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Crest", "Crest")
                        .WithMany()
                        .HasForeignKey("CrestId");

                    b.HasOne("L2Dn.GameServer.Db.Crest", "LargeCrest")
                        .WithMany()
                        .HasForeignKey("LargeCrestId");

                    b.HasOne("L2Dn.GameServer.Db.Character", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crest");

                    b.Navigation("LargeCrest");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanNotice", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanPrivileges", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanSkill", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanSubPledge", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("L2Dn.GameServer.Db.Character", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.ClanWar", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Clan", "Clan1")
                        .WithMany()
                        .HasForeignKey("Clan1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("L2Dn.GameServer.Db.Clan", "Clan2")
                        .WithMany()
                        .HasForeignKey("Clan2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("L2Dn.GameServer.Db.Clan", "WinnerClan")
                        .WithMany()
                        .HasForeignKey("WinnerClanId");

                    b.Navigation("Clan1");

                    b.Navigation("Clan2");

                    b.Navigation("WinnerClan");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Forum", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Forum", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Pet", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Character", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Post", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Forum", "Forum")
                        .WithMany()
                        .HasForeignKey("ForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("L2Dn.GameServer.Db.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forum");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Topic", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Forum", "Forum")
                        .WithMany()
                        .HasForeignKey("ForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forum");
                });
#pragma warning restore 612, 618
        }
    }
}
